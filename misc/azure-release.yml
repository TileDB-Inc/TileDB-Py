stages:
- stage: Release
  variables:
    LIBTILEDB_VERSION: release-1.7.3
    LIBTILEDB_SHA: c4e938bdb155e88767c9f7dbd76f80ce0c30ec22
    CIBW_SKIP: cp35-*
  condition: or(startsWith(variables['Build.SourceBranch'], 'refs/tags'), contains(variables['Build.SourceBranchName'], 'release-'))
  jobs:
  - job:
    pool:
      vmImage: 'macOS-10.13'
    variables:
      #cibw_test_command: "cd {project}/tiledb/tests && pytest"
      cibw_test_requires: "pytest"
    steps:
    - template: azure-libtiledb-darwin.yml
    - task: UsePythonVersion@0
    - bash: |
        set -xe pipefail
        python setup.py sdist --dist-dir wheelhouse
        python -m pip install --upgrade pip
        pip install cibuildwheel==1.1.0 pytest
        export CIBW_ENVIRONMENT="TILEDB_PATH=${HOSTPREFIX}/${PIPELINE_WORKSPACE}/.libtiledb_dist/${LIBTILEDB_SHA}"
        cibuildwheel --output-dir wheelhouse `ls wheelhouse/tiledb-*.tar.gz`
      displayName: "Build and test wheels"
    - task: PublishBuildArtifacts@1
      inputs: {pathtoPublish: 'wheelhouse'}
    - template: azure-print-logs.yml

#  - job:
#    variables:
#      HOSTPREFIX: "/host/" # linux builds are run in docker w/ '-v/:/host'
#      cibw_before_build:
#        /host/${BUILD_REPOSITORY_LOCALPATH}/misc/azure-build-libtiledb-unix.sh
#    pool:
#      vmImage: 'ubuntu-16.04'
#    resources:
#      containers:
#      - container: manylinux2010
#        image: 'quay.io/pypa/manylinux2010_x86_64'
#    container: manylinux2010
#    steps:
#    - task: UsePythonVersion@0
#    - bash: |
#        set -xe pipefail
#        python -m pip install --upgrade pip
#        pip install cibuildwheel==1.1.0
#        export CIBW_ENVIRONMENT="TILEDB_PATH=${HOSTPREFIX}/${PIPELINE_WORKSPACE}/.libtiledb_dist/${LIBTILEDB_SHA} CXXFLAGS='-Wno-unused-parameter -lrt -DKJ_USE_EPOLL=0 -D__BIONIC__=1' CFLAGS='-Wno-unused-parameter -lrt -DKJ_USE_EPOLL=0 -D__BIONIC__=1'"
#        cibuildwheel --output-dir wheelhouse .
#    - template: azure-print-logs.yml

#- job: windows
#  pool: {vmImage: 'vs2017-win2016'}
#  variables:
#    CIBW_SKIP: cp27-win_amd64, cp35-win_amd64
#  steps:
#    - task: UsePythonVersion@0
#    - script: choco install vcpython27 -f -y
#      displayName: Install Visual C++ for Python 2.7
#    - bash: |
#        python -m pip install --upgrade pip
#        pip install cibuildwheel==1.1.0
#        cibuildwheel --output-dir wheelhouse .
