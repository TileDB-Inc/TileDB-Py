name: Daily Test Build TileDB-Py Against Core

on:
  workflow_call:
    inputs:
      libtiledb_version:
        required: true
        type: string

jobs:
  test:
    runs-on: ${{ matrix.os }}
    defaults:
      run:
        shell: bash
    strategy:
      matrix:
        os: [ubuntu-latest, macos-13, macos-14, windows-latest]
      fail-fast: false

    env:
      TILEDB_VERSION: ${{ inputs.libtiledb_version }}
      MACOSX_DEPLOYMENT_TARGET: "11"
      VCPKG_BINARY_SOURCES: 'clear;x-gha,readwrite'

    steps:
      - name: Setup MSVC toolset (VS 2022)
        uses: TheMrMilchmann/setup-msvc-dev@v3
        if: matrix.os == 'windows-latest'
        with:
          arch: x64

      - name: Enable vcpkg binary caching
        uses: actions/github-script@v6
        with:
          script: |
            core.exportVariable('ACTIONS_CACHE_URL', process.env.ACTIONS_CACHE_URL || '');
            core.exportVariable('ACTIONS_RUNTIME_TOKEN', process.env.ACTIONS_RUNTIME_TOKEN || '');

      - name: Install Ninja (VS 2022)
        uses: seanmiddleditch/gha-setup-ninja@v4
        if: matrix.os == 'windows-latest'

      - name: "Set CMAKE_GENERATOR"
        run: echo "CMAKE_GENERATOR=Ninja" >> $GITHUB_ENV
        if: matrix.os == 'windows-latest'

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Print Python version
        run: |
          which python
          which pip
          python --version

      - name: Print env
        run: printenv

      # Remove after upstream PR fully-deployed:
      # - https://github.com/actions/runner-images/pull/7125
      - name: "Install homebrew dependencies"
        run: brew install pkg-config
        if: matrix.os == 'macos-13' || matrix.os == 'macos-14'

      - name: Checkout TileDB-Py `dev`
        uses: actions/checkout@v4

      - name: Build and install TileDB-Py and dependencies
        run: python -m pip install --verbose .[test]

      - name: Run tests
        run: |
          PROJECT_CWD=$PWD
          rm tiledb/__init__.py
          cd /tmp
          pytest -vv --showlocals $PROJECT_CWD

  create_issue_on_fail:
    permissions:
      issues: write
    runs-on: ubuntu-latest
    needs: test
    if: failure() || cancelled()
    steps:
      - uses: actions/checkout@v3
      - name: Create Issue if Build Fails
        uses: TileDB-Inc/github-actions/open-issue@main
        with:
          name: nightly build
          label: bug,nightly-failure
          assignee: kounelisagis,nguyenv,ihnorton
