trigger:
- dev

strategy:
  matrix:
    mac:
      imageName: 'macOS-10.13'
      python.version: '3.x'
    windows:
      imageName: 'vs2017-win2016'
      python.version: '3.x'
  maxParallel: 4

pool:
  vmImage: $(imageName)

steps:
- task: UsePythonVersion@0
  inputs:
    versionSpec: '$(python.version)'
    architecture: 'x64'

- script: |
    python -m pip install --upgrade pip setuptools wheel numpy tox setuptools-scm cython
  displayName: 'Install dependencies'

- script: |
    call "C:\Program Files (x86)\Microsoft Visual Studio\2017\Enterprise\VC\Auxiliary\Build\vcvarsall.bat" x64
    python setup.py build_ext --inplace
    python setup.py install
  displayName: 'Build TileDB and TileDB-Py extension (POSIX)'
  condition: eq(variables['Agent.OS'], 'Windows_NT')

- script: |
    python setup.py build_ext --inplace
    python setup.py install
  displayName: 'Build TileDB and TileDB-Py extension (Windows)'
  condition: ne(variables['Agent.OS'], 'Windows_NT')


- script: |
    python -m unittest -v
  displayName: 'Run tests'

- task: PublishTestResults@2
  inputs:
    testResultsFiles: '**/test-results.xml'
    testRunTitle: 'Python $(python.version)'
  condition: succeededOrFailed()
