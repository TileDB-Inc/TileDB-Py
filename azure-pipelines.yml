# Python package
# Create and test a Python package on multiple Python versions.
# Add steps that analyze code, save the dist with the build record, publish to a PyPI-compatible index, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/python

trigger:
- azure_ci

strategy:
  matrix:
    mac:
      imageName: 'macOS-10.13'
      python.version: '3.x'
    windows:
      imageName: 'vs2017-win2016'
      python.version: '3.x'
  maxParallel: 4

pool:
  vmImage: $(imageName)

steps:
- task: UsePythonVersion@0
  inputs:
    versionSpec: '$(python.version)'
    architecture: 'x64'

- script: |
    call "C:\Program Files (x86)\Microsoft Visual Studio\2017\Enterprise\VC\Auxiliary\Build\vcvarsall.bat" x64
    python -m pip install --upgrade pip setuptools wheel numpy tox setuptools-scm cython
  #pip install -r requirements_dev.txt
  displayName: 'Install dependencies'

- script: |
    call "C:\Program Files (x86)\Microsoft Visual Studio\2017\Enterprise\VC\Auxiliary\Build\vcvarsall.bat" x64
    python setup.py build_ext --inplace
    python setup.py install

- script: |
    python -m unittest -v
  displayName: 'test'

- task: PublishTestResults@2
  inputs:
    testResultsFiles: '**/test-results.xml'
    testRunTitle: 'Python $(python.version)'
  condition: succeededOrFailed()

#- job: 'Publish'
#  dependsOn: 'Test'
#  pool:
#    vmImage: 'Ubuntu-16.04'
#
#  steps:
#  - task: UsePythonVersion@0
#    inputs:
#      versionSpec: '3.x'
#      architecture: 'x64'
#
#  - script: python setup.py sdist
#    displayName: 'Build sdist'

